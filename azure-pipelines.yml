trigger:
  branches:
    include:
      - main

pool: Default

variables:
  ACR_LOGIN_SERVER: 'zzeydwqgimagescanacr.azurecr.io'
  IMAGE_NAME: 'sampleapp'
  IMAGE_TAG: 'latest'
  SCANNER_TOOL_PATH: '/usr/local/bin/trivy'

stages:

  - stage: ScanImage
    jobs: 
      - job: Scan
        steps:
          - script: |
              echo "Installing Trivy..."
              curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
              echo "Trivy installed successfully:"
              trivy --version
              echo "Scanning the image with Trivy..."
              trivy image nginx:latest > scan_report.txt
            displayName: 'Run Image Scan'
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'scan_report.txt'
              artifactName: 'SecurityReports'
            displayName: 'Publish Scan Report'

  - stage: Review
    dependsOn: ScanImage
    condition: succeededOrFailed()
    jobs:
      - job: ReviewScanResults
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'SecurityReports'
              downloadPath: $(System.ArtifactsDirectory)
          - script: |
              if grep -q 'HIGH' $(System.ArtifactsDirectory)/scan_report.txt; then
                echo "High severity vulnerabilities found! Blocking deployment."
                exit 1
              else
                echo "No high severity vulnerabilities found. Proceeding..."
              fi
            displayName: 'Check Scan Results'
